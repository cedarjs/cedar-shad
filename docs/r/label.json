{
  "name": "label",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-label"
  ],
  "files": [
    {
      "path": "ui/label.tsx",
      "content": "import * as React from 'react'\n\nimport * as LabelPrimitive from '@radix-ui/react-label'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { useErrorStyles } from '@redwoodjs/forms'\n\nimport { cn } from 'src/utils/cn'\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n)\n\nexport const Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants> & {\n      name: string\n      errorClassName?: string\n      errorStyle?: React.CSSProperties\n    }\n>(\n  (\n    { name, errorClassName, errorStyle, className, style, children, ...props },\n    ref\n  ) => {\n    const styles = useErrorStyles({\n      name,\n      errorClassName: cn(labelVariants(), errorClassName),\n      errorStyle,\n      className: cn(labelVariants(), className),\n      style,\n    })\n\n    return (\n      <LabelPrimitive.Root ref={ref} {...styles} {...props}>\n        {children || name}\n      </LabelPrimitive.Root>\n    )\n  }\n)\nLabel.displayName = LabelPrimitive.Root.displayName\n",
      "type": "registry:ui"
    }
  ]
}